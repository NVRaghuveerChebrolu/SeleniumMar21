<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="34664" started-at="2021-04-20T05:35:35Z" finished-at="2021-04-20T05:36:10Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="34664" started-at="2021-04-20T05:35:35Z" finished-at="2021-04-20T05:36:10Z">
      <class name="com.testcases.TestNgClass1">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="beforeSuite" is-config="true" duration-ms="34" started-at="2021-04-20T05:35:35Z" finished-at="2021-04-20T05:35:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="beforeTest" is-config="true" duration-ms="207" started-at="2021-04-20T05:35:35Z" finished-at="2021-04-20T05:35:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="beforeClass" is-config="true" duration-ms="6600" started-at="2021-04-20T05:35:35Z" finished-at="2021-04-20T05:35:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-20T05:35:42Z" finished-at="2021-04-20T05:35:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="validateGmoOnlineLoadedSuccessfully()[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="validateGmoOnlineLoadedSuccessfully" duration-ms="183" started-at="2021-04-20T05:35:42Z" finished-at="2021-04-20T05:35:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGmoOnlineLoadedSuccessfully -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="afterMethod" is-config="true" duration-ms="36" started-at="2021-04-20T05:35:42Z" finished-at="2021-04-20T05:35:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateGmoOnlineLoadedSuccessfully status=SUCCESS method=TestNgClass1.validateGmoOnlineLoadedSuccessfully()[pri:0, instance:com.testcases.TestNgClass1@887af79] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-20T05:35:42Z" finished-at="2021-04-20T05:35:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="validateOnLineCatalogLoadedSuccessfully()[pri:1, instance:com.testcases.TestNgClass1@887af79]" name="validateOnLineCatalogLoadedSuccessfully" duration-ms="1877" started-at="2021-04-20T05:35:42Z" depends-on-methods="com.testcases.TestNgClass1.validateGmoOnlineLoadedSuccessfully" finished-at="2021-04-20T05:35:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [OnLine Cataloge] but found [OnLine Catalog]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [OnLine Cataloge] but found [OnLine Catalog]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.testcases.TestNgClass1.validateOnLineCatalogLoadedSuccessfully(TestNgClass1.java:71)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOnLineCatalogLoadedSuccessfully -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="afterMethod" is-config="true" duration-ms="2108" started-at="2021-04-20T05:35:44Z" finished-at="2021-04-20T05:35:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOnLineCatalogLoadedSuccessfully status=FAILURE method=TestNgClass1.validateOnLineCatalogLoadedSuccessfully()[pri:1, instance:com.testcases.TestNgClass1@887af79] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-04-20T05:35:46Z" finished-at="2021-04-20T05:35:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="validateOrderQuantityGlacierSunGlasses()[pri:2, instance:com.testcases.TestNgClass1@887af79]" name="validateOrderQuantityGlacierSunGlasses" duration-ms="4500" started-at="2021-04-20T05:35:46Z" finished-at="2021-04-20T05:35:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Billing Informatio] but found [Billing Information]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Billing Informatio] but found [Billing Information]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.testcases.TestNgClass1.validateOrderQuantityGlacierSunGlasses(TestNgClass1.java:102)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateOrderQuantityGlacierSunGlasses -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="afterMethod" is-config="true" duration-ms="721" started-at="2021-04-20T05:35:51Z" finished-at="2021-04-20T05:35:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateOrderQuantityGlacierSunGlasses status=FAILURE method=TestNgClass1.validateOrderQuantityGlacierSunGlasses()[pri:2, instance:com.testcases.TestNgClass1@887af79] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2021-04-20T05:35:52Z" finished-at="2021-04-20T05:35:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="ValidatingBillingInfoWithDataDriven()[pri:3, instance:com.testcases.TestNgClass1@887af79]" name="ValidatingBillingInfoWithDataDriven" duration-ms="17935" started-at="2021-04-20T05:35:52Z" finished-at="2021-04-20T05:36:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidatingBillingInfoWithDataDriven -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-04-20T05:36:10Z" finished-at="2021-04-20T05:36:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidatingBillingInfoWithDataDriven status=SUCCESS method=TestNgClass1.ValidatingBillingInfoWithDataDriven()[pri:3, instance:com.testcases.TestNgClass1@887af79] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="afterClass" is-config="true" duration-ms="0" started-at="2021-04-20T05:36:10Z" finished-at="2021-04-20T05:36:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="afterTest" is-config="true" duration-ms="368" started-at="2021-04-20T05:36:10Z" finished-at="2021-04-20T05:36:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.testcases.TestNgClass1@887af79]" name="afterSuite" is-config="true" duration-ms="0" started-at="2021-04-20T05:36:10Z" finished-at="2021-04-20T05:36:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.testcases.TestNgClass1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
